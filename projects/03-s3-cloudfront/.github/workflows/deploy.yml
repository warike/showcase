name: Website - CI/CD Pipeline
on:
  push:
    branches: [main, master]
    paths:
      - 'app/**'
      - '.github/workflows/**'
env:
  DIST: out
jobs:
    build:
        name: build
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: ./app
        strategy:
          matrix:
            node-version: [2]
            pnpm-version: [10]

        steps:
            ## v4: Further upgraded to Node.js 20, aligning with the latest recommended runtime for GitHub Actions
            - name: Checkout repository
              uses: actions/checkout@v4

            ## Install PNPM
            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with: 
                version: 10

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                node-version: 22
                cache: 'pnpm'
                cache-dependency-path: app/pnpm-lock.yaml

            - name: Install Dependencies
              run: pnpm install

            - name: Scan for critical vulnerabilities
              run: pnpm audit --audit-level=critical
            
            - name: Run tests
              run: pnpm test:ci
            
            - name: Build static site
              run: pnpm run build
            
            - name: Upload static site artifact
              if: ${{ !env.ACT }}
              uses: actions/upload-artifact@v4
              with:
                name: static-site
                path: ./app/${{ env.DIST }}
    deploy:
        runs-on: ubuntu-latest
        needs: build
        defaults:
          run:
            working-directory: ./app
        permissions:
          id-token: write
          contents: read
        steps:
            - name: Configure AWS Credentials for OIDC
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
                aws-region: ${{ secrets.AWS_REGION }}
            - name: Download static site artifact
              uses: actions/download-artifact@v4
              with:
                name: static-site
                path: ./app/${{ env.DIST }}
            - name: Deploy static site to S3
              run: |
                aws s3 sync --delete ${{ env.DIST }} s3://${{ secrets.BUCKET }} --region ${{ secrets.AWS_REGION }}
            - name: Invalidate CloudFront cache
              run: |
                aws cloudfront create-invalidation \
                  --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
                  --paths "/*"
            
